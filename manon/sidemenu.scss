/*---------------------------------------------------------------*/
/*----------------------- sidemenu.scss -------------------------*/
/*---------------------------------------------------------------*/
@use "sidemenu-variables";
@use "mixins/icon";

$sidemenu-breakpoint: 55rem !default;

main.sidemenu {
  $page-content-width: calc(var(--sidemenu-nav-width) + var(--sidemenu-main-gap));

  /* Places sidemenu next to the main content of the page */
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding-top: var(--sidemenu-main-padding-top);
  padding-bottom: var(--sidemenu-main-padding-bottom);
  gap: var(--sidemenu-main-gap);

  @media (min-width: $sidemenu-breakpoint) {
    flex-wrap: nowrap;
  }

  /* main content of the page */
  >div,
  >article,
  >section {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    background-color: var(--sidemenu-content-container-background-color);
    padding-top: var(--sidemenu-content-container-padding-top);
    padding-right: var(--sidemenu-content-container-padding-right);
    padding-bottom: var(--sidemenu-content-container-padding-bottom);
    padding-left: var(--sidemenu-content-container-padding-left);
    box-sizing: border-box;

    @media (min-width: $sidemenu-breakpoint) {
      max-width: calc(100% - $page-content-width);
    }
  }

  >nav {
    display: none;

    @media (min-width: $sidemenu-breakpoint) {
      /* nav */
      margin: 0;
      display: block;
      width: var(--sidemenu-nav-width);
      padding-top: var(--sidemenu-nav-padding-top);
      padding-right: var(--sidemenu-nav-padding-right);
      padding-bottom: var(--sidemenu-nav-padding-bottom);
      padding-left: var(--sidemenu-nav-padding-left);
      box-sizing: border-box;
      position: relative;
      background-color: var(--sidemenu-nav-background-color);
      border-width: var(--sidemenu-nav-border-width);
      border-style: var(--sidemenu-nav-border-style);
      border-color: var(--sidemenu-nav-border-color);
      background-image: var(--sidemenu-nav-background-image);
      background-repeat: var(--sidemenu-nav-background-repeat);
      background-size: var(--sidemenu-nav-background-size);
      background-position: var(--sidemenu-nav-background-position);

      /* List */
      >ul {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        padding: var(--sidemenu-ul-padding);
        max-height: var(--sidemenu-main-max-height);
        overflow: auto;
        /* Solves a bug in older safari versions where position sticky blocks overflow auto */
        display: block;
      }


      button+ul {
        /* Compensating for the reserved space for the icon.
				Position sticky still reserves the space within the flow. */
        margin-top: 0;
      }

      >ul li,
      button+ul li {
        background-color: var(--sidemenu-list-item-background-color);
        border-color: var(--sidemenu-list-item-border-color);
        border-style: var(--sidemenu-list-item-border-style);
        border-width: var(--sidemenu-list-item-border-width);
        padding: var(--sidemenu-list-item-padding);
        line-height: var(--sidemenu-list-item-line-height);
        font-size: var(--sidemenu-list-item-font-size);
        font-weight: var(--sidemenu-list-item-font-weight);
        color: var(--sidemenu-list-item-text-color);
        list-style: var(--sidemenu-list-item-list-style);
      }

      /* Button */
      .sidemenu-toggle {
        display: flex;
        align-items: center;
        justify-content: center;
        position: -webkit-sticky;
        position: sticky;
        gap: 0;
        min-width: var(--sidemenu-toggle-button-min-width);
        min-height: var(--sidemenu-toggle-button-min-height);
        font-size: var(--sidemenu-toggle-button-font-size);
        margin-left: calc(var(--sidemenu-nav-width) - var(--sidemenu-nav-padding-left));

        /* Needed to keep the button to stick to the top */
        top: var(--sidemenu-button-margin-top);
        z-index: 2;

        &:before {
          @include icon.icon;
          content: var(--sidemenu-expanded-button-icon);
          font-family: var(--sidemenu-button-icon-font-family);
          font-size: var(--sidemenu-button-icon-font-size);

          /* Styling options for text input instead of icons */
          font-weight: var(--sidemenu-button-icon-font-weight);
          white-space: var(--sidemenu-button-icon-white-space);
        }

        &[aria-expanded="false"] {
          &:before {
            content: var(--sidemenu-collapsed-button-icon);
          }
        }
      }
    }
  }

  &.sidemenu-closed {
    @media (min-width: $sidemenu-breakpoint) {
      >nav {
        border: 0;
        width: 0;
        padding-left: 0;
        padding-right: 0;

        >ul {
          display: none;
        }

        .sidemenu-toggle {
          margin-left: 0;
        }
      }

      >div {
        max-width: 100%;
      }
    }
  }
}