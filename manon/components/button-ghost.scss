@use "../mixins/apply-from-theme";
@use "../variables" as theme;

button,
a.button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  &.ghost {
    @include apply-from-theme.apply-from-theme(
      (
        justify-content: theme.$button-ghost-justify-content,
        gap: theme.$button-ghost-gap,
        background-color: theme.$button-ghost-background-color,
        color: theme.$button-ghost-text-color,
        font-family: theme.$button-ghost-font-family,
        font-size: theme.$button-ghost-font-size,
        font-weight: theme.$button-ghost-font-weight,
        line-height: theme.$button-ghost-line-height,
        text-decoration: theme.$button-ghost-text-decoration,
        text-align: theme.$button-ghost-text-align,
        padding-top: theme.$button-ghost-padding-top,
        padding-right: theme.$button-ghost-padding-right,
        padding-bottom: theme.$button-ghost-padding-bottom,
        padding-left: theme.$button-ghost-padding-left,
        min-width: theme.$button-ghost-min-width,
        height: theme.$button-ghost-height,
        min-height: theme.$button-ghost-min-height,
        border-width: theme.$button-ghost-border-width,
        border-style: theme.$button-ghost-border-style,
        border-color: theme.$button-ghost-border-color,
        border-radius: theme.$button-ghost-border-radius,
        -webkit-appearance: theme.$button-ghost-webkit-appearance,
      )
    );

    > img {
      @include apply-from-theme.apply-from-theme(
        (
          max-width: theme.$button-ghost-image-max-width,
        )
      );
    }

    &:hover,
    &.hover {
      @include apply-from-theme.apply-from-theme(
        (
          background-color: theme.$button-ghost-hover-background-color,
          color: theme.$button-ghost-hover-text-color,
          border-color: theme.$button-ghost-hover-border-color,
          border-width: theme.$button-ghost-hover-border-width,
          border-style: theme.$button-ghost-hover-border-style,
          border-radius: theme.$button-ghost-hover-border-radius,
        )
      );
    }

    &:active,
    &.active {
      @include apply-from-theme.apply-from-theme(
        (
          background-color: theme.$button-ghost-active-background-color,
          color: theme.$button-ghost-active-text-color,
          border-style: theme.$button-ghost-active-border-style,
          border-color: theme.$button-ghost-active-border-color,
          border-width: theme.$button-ghost-active-border-width,
          border-radius: theme.$button-ghost-active-border-radius,
        )
      );
    }

    &:focus,
    &.focus {
      @include apply-from-theme.apply-from-theme(
        (
          border-style: theme.$button-ghost-focus-border-style,
          border-color: theme.$button-ghost-focus-border-color,
          border-width: theme.$button-ghost-focus-border-width,
          border-radius: theme.$button-ghost-focus-border-radius,
          background-color: theme.$button-ghost-focus-background-color,
          color: theme.$button-ghost-focus-text-color,
          outline: theme.$button-ghost-focus-outline,
          outline-offset: theme.$button-ghost-focus-outline-offset,
          outline-color: theme.$button-ghost-focus-outline-color,
          z-index: theme.$button-ghost-focus-z-index,
          box-shadow: theme.$button-ghost-focus-box-shadow,
        )
      );

      &:visited,
      &.visited {
        @include apply-from-theme.apply-from-theme(
          (
            outline: theme.$button-ghost-focus-outline,
            outline-offset: theme.$button-ghost-focus-outline-offset,
            outline-color: theme.$button-ghost-focus-outline-color,
            z-index: theme.$button-ghost-focus-z-index,
            box-shadow: theme.$button-ghost-focus-box-shadow,
          )
        );
      }
    }
  }
}

a.button,
a:visited.button {
  &.ghost {
    @include apply-from-theme.apply-from-theme(
      (
        color: theme.$link-button-ghost-text-color,
      )
    );
    &::before {
      @include apply-from-theme.apply-from-theme(
        (
          color: theme.$link-button-ghost-text-color,
        )
      );
    }
    span.icon::before {
      @include apply-from-theme.apply-from-theme(
        (
          color: theme.$link-button-ghost-text-color,
        )
      );
    }
  }
}
