@use "../mixins/theming";
@use "../variables" as theme;

.breadcrumb-bar {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 0;

  @include apply-from-theme.apply-from-theme(
    (
      background-color: theme.$breadcrumb-bar-background-color,
      color: theme.$breadcrumb-bar-text-color,
    )
  );

  > div {
    display: flex;
    flex-direction: row;
    width: 100%;
    box-sizing: border-box;
    align-self: center;

    @include apply-from-theme.apply-from-theme(
      (
        padding-top: theme.$breadcrumb-bar-content-block-padding-top,
        padding-right: theme.$breadcrumb-bar-content-block-padding-right,
        padding-bottom: theme.$breadcrumb-bar-content-block-padding-bottom,
        padding-left: theme.$breadcrumb-bar-content-block-padding-left,
        gap: theme.$breadcrumb-bar-content-block-gap,
        max-width: theme.$breadcrumb-bar-content-block-max-width,
      )
    );

    ul,
    ol {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      color: inherit;

      @include apply-from-theme.apply-from-theme(
        (
          justify-content: theme.$breadcrumb-bar-content-block-justify-content,
          align-items: theme.$breadcrumb-bar-content-block-list-vertical-align,
          padding: theme.$breadcrumb-bar-content-block-list-padding,
          gap: theme.$breadcrumb-bar-content-block-list-gap,
        )
      );

      li {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: center;
        list-style: none;

        @include apply-from-theme.apply-from-theme(
          (
            gap: theme.$breadcrumb-bar-content-block-list-item-gap,
          )
        );

        &::after {
          @include theming.apply-from-theme(
          (
            content: theme.$breadcrumb-bar-content-block-icon,
            font-family: theme.$breadcrumb-bar-icon-font-family,
            margin-left: theme.$breadcrumb-bar-content-block-icon-margin-left,
            margin-right:
                theme.$breadcrumb-bar-content-block-icon-margin-right,
            )
          );
        }

        &:hover {
          @include apply-from-theme.apply-from-theme(
            (
              color: theme.$breadcrumb-bar-content-block-hover-text-color,
            )
          );

          &::after {
            @include apply-from-theme.apply-from-theme(
              (
                color: theme.$breadcrumb-bar-content-block-text-color,
              )
            );
          }
        }

        &:last-child {
          @include apply-from-theme.apply-from-theme(
            (
              font-weight:
                theme.$breadcrumb-bar-content-block-list-item-last-child-font-weight,
            )
          );

          &::after {
            content: none;
          }
        }

        a {
          /* Break words that won't fit the available space */
          overflow-wrap: anywhere;

          @include apply-from-theme.apply-from-theme(
            (
              text-decoration:
                theme.$breadcrumb-bar-content-block-link-text-decoration,
            )
          );

          &:hover {
            @include theming.apply-from-theme(
              (
                text-decoration:
                  theme.$breadcrumb-bar-content-block-link-hover-text-decoration,
              )
            );
          }

          &::before {
            content: none;
          }
        }
      }
    }
  }
}
