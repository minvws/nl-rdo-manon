@use "../mixins/apply-from-theme";
@use "../variables" as theme;
@use "../functions/not-null";

$styles: ();
@if not-null.not-null(
  theme.$checkbox-width,
  theme.$checkbox-gap,
  theme.$label-column,
  theme.$input-column
)
{
  $styles: map-merge(
    $styles,
    (
      $checkbox-input-width: calc(
          #{theme.$checkbox-width} + theme.$checkbox-gap
        ),
      $label-column: theme.$label-column,
      $input-column: theme.$input-column,
    )
  );
}
@include apply-from-theme.apply-from-theme($styles);

$breakpoint-1: 24rem !default;

form {
  input[type="checkbox"] {
    padding: 0;
    margin-left: 0;
    margin-right: 0;

    @include apply-from-theme.apply-from-theme(
      (
        vertical-align: theme.$form-checkbox-vertical-align,
        cursor: theme.$form-checkbox-cursor,
        width: theme.$form-checkbox-width,
        min-width: theme.$form-checkbox-width,
        height: theme.$form-checkbox-height,
        accent-color: theme.$form-radio-background-color,
      )
    );

    & + label {
      width: auto;
      cursor: pointer;
      margin-top: 0;
    }

    &:disabled {
      cursor: not-allowed;
    }
  }

  .checkbox {
    > div {
      padding: 0;
      display: flex;
      flex-direction: row;

      @include apply-from-theme.apply-from-theme(
        (
          gap: theme.$checkbox-gap,
          align-items: theme.$checkbox-align-items,
        )
      );
    }

    p.error,
    p.warning,
    p.confirmation,
    p.explanation,
    p.primary {
      margin: 0;
    }

    @media (width >= $breakpoint-1) {
      + p.error,
      + p.warning,
      + p.confirmation,
      + p.explanation,
      + p.primary {
        $styles: ();
        @if theme.$checkbox-input-width != null {
          $styles: map-merge(
            $styles,
            (
              margin-left: theme.$checkbox-input-width,
              max-width: calc(100% - #{theme.$checkbox-input-width}),
            )
          );
        }
        @include apply-from-theme.apply-from-theme($styles);
      }
    }
  }

  @media (width >= $breakpoint-1) {
    .option-group {
      .checkbox {
        + p.error,
        + p.warning,
        + p.confirmation,
        + p.explanation,
        + p.primary {
          $styles: ();
          @if not-null.not-null(
            theme.$checkbox-input-width,
            theme.$label-column,
            theme.$input-column
          )
          {
            $styles: map-merge(
              $styles,
              (
                max-width: calc(
                    #{theme.$input-column} - #{theme.$checkbox-input-width}
                  ),
                margin-left: calc(
                    #{theme.$label-column} + #{theme.$checkbox-input-width}
                  ),
              )
            );
          }
          @include apply-from-theme.apply-from-theme($styles);
        }
      }
    }
  }
}
