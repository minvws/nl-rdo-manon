@use "../mixins/theming";
@use "../variables" as theme;
@use "../functions/validators";

$breakpoint: 24rem !default;

form.horizontal {
  flex-direction: column !important;
  align-items: flex-start;

  label {
    width: 100%;
    max-width: theme.$form-horizontal-label-max-width;
  }

  button,
  a.button,
  input[type="button"],
  input[type="submit"],
  input[type="reset"] {
    @include theming.apply-from-theme(
      (
        margin: theme.$form-horizontal-button-margin,
      )
    );
  }

  > div,
  > section {
    &.form-group {
      display: flex;
      flex-direction: row;
      align-items: center;
      flex-wrap: nowrap;
      margin: 0;
      width: theme.$form-horizontal-group;
      gap: theme.$form-horizontal-group-gap;
      align-items: theme.$form-horizontal-group-align-items;
      justify-content: theme.$form-horizontal-group-justify-content;

      > * {
        flex-grow: 1;
        box-sizing: border-box;
      }

      &.checkbox {
        margin: 0;
        flex-wrap: nowrap;
        gap: theme.$checkbox-gap;

        @media (width >= $breakpoint) {
          max-width: theme.$form-input-column;
          margin-left: theme.$form-label-column;
        }

        %horizontal-checkbox,
        input[type="checkbox"] {
          /* Align checkbox with input fields */
          margin-left: 0;
          flex-grow: 0;
          margin-right: 0;

          & + label {
            @if theme.$checkbox-width {
              max-width: calc(100% - theme.$checkbox-width);
            }
          }
        }

        > div {
          @extend %horizontal-checkbox;

          input[type="checkbox"] {
            margin-left: 0;
          }
        }
      }

      &.radio {
        flex-wrap: nowrap;

        %horizontal-radio,
        input[type="radio"] {
          flex-grow: 0;
          margin-right: 0;

          & + label {
            @if theme.$radio-input-width {
              max-width: calc(100% - theme.$radio-input-width);
            }
          }

          @media (width >= $breakpoint) {
            /* Align radio with input fields */
            margin-left: theme.$form-label-column;
          }
        }

        > div {
          @extend %horizontal-radio;

          input[type="radio"] {
            margin-left: 0;
          }
        }
      }

      &.checkbox,
      &.radio {
        justify-content: flex-start;

        > .nota-bene {
          margin-left: theme.$form-label-column;
        }
      }

      /* Notifications */
      &.error,
      &.warning,
      &.explanation,
      &.confirmation,
      &.system {
        margin: 0;
        flex-direction: theme.$form-horizontal-notification-block-element-flex-direction;
        justify-content: theme.$form-horizontal-notification-block-element-justify-content;
        align-items: theme.$form-horizontal-notification-block-element-align-items;
        gap: theme.$form-horizontal-notification-block-element-gap;

        > * {
          max-width: 100%;
        }
      }

      > button,
      > a.button,
      > input[type="button"],
      > input[type="submit"],
      > input[type="reset"] {
        flex-grow: 0;
      }

      @media (width >= $breakpoint) {
        flex-wrap: nowrap;

        > * {
          max-width: theme.$form-input-column;
        }

        label {
          width: 100%;
          max-width: theme.$form-horizontal-label-max-width;
        }
      }
    }

    .option-group {
      display: flex;
      flex-direction: column;
      align-items: flex-start;

      @media (width >= $breakpoint) {
        > * {
          margin-left: theme.$form-label-column;
        }
      }
    }

    @media (width >= $breakpoint) {
      %align-to-input {
        width: auto;
        max-width: 100%;
        flex-grow: 0;
        margin: theme.$form-horizontal-button-margin;
      }

      > button,
      > a.button,
      > input[type="button"],
      > input[type="submit"],
      > input[type="reset"],
      > a {
        @extend %align-to-input;
      }

      > div {
        > button,
        > a.button,
        > input[type="button"],
        > input[type="submit"],
        > input[type="reset"],
        > a {
          @extend %align-to-input;
        }
      }

      > div.horizontal,
      > div.button-container {
        max-width: theme.$form-input-column;
        margin: theme.$form-horizontal-button-margin;
        flex-wrap: wrap;

        button,
        a.button,
        input[type="button"],
        input[type="submit"],
        input[type="reset"] {
          max-width: 100%;
          margin: theme.$form-horizontal-button-margin;
        }
      }
    }
  }
}
