/*---------------------------------------------------------------------*/
/*------------------------- mixins/icon.scss --------------------------*/
/*---------------------------------------------------------------------*/

@mixin icon {
  & {
    position: static;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 0;
    font-style: normal;
  }
}

@mixin icon-format($prefix) {
  @include icon;

  & {
    font-family: var(--#{$prefix}icon-font-family, var(--icon-font-family));
    font-size: var(--#{$prefix}icon-font-size, var(--icon-font-size));
    line-height: var(--#{$prefix}icon-line-height);
    text-decoration: var(--#{$prefix}icon-text-decoration);
    padding-right: var(--#{$prefix}icon-padding-right);
    padding-left: var(--#{$prefix}icon-padding-left);
    background-color: var(--#{$prefix}icon-background-color);
    color: var(--#{$prefix}icon-text-color);
  }
}

@mixin icon-format-variables($prefix, $parentPrefix, $state) {
  --#{$prefix}icon: none;
  --#{$prefix}icon-font-family: var(--#{$parentPrefix}icon-font-family);
  --#{$prefix}icon-font-size: var(--#{$parentPrefix}icon-font-size);
  --#{$prefix}icon-line-height: var(--#{$parentPrefix}icon-line-height);
  --#{$prefix}icon-text-decoration: var(--#{$parentPrefix}icon-text-decoration);
  --#{$prefix}icon-padding-right: 0.5rem;
  --#{$prefix}icon-padding-left: 0;
  --#{$prefix}icon-background-color: var(
    --#{$parentPrefix}#{$state}background-color
  );
  --#{$prefix}icon-text-color: var(--#{$parentPrefix}#{$state}text-color);
}

@mixin icon-content($prefix) {
  & {
    content: var(--#{$prefix}icon);
  }
}

@mixin define-icons($glyphs, $position: "before", $font-family: null) {
  /* Specified for link as buttons to allow a.button icons to be overwritten by using the variable. */
  a.button .icon,
  .icon,
  .icon-only {
    @each $name, $glyph in $glyphs {
      &.icon-#{$name}::#{$position} {
        @if $font-family {
          font-family: $font-family;
        }
        content: $glyph;
      }
    }
  }
}
